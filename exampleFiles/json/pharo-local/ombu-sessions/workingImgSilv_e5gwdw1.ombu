OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:07:39.498+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '11' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BruteForceTagOfTagsGeneratorTest,				#isMetaSide : false			},			#name : #testMultiStart,			#protocol : #tests,			#sourceCode : 'testMultiStart\r\t\r\tself assertEnumeration: #stringOrTag anyParses:\'<a>b</a>\r<single line tag/>\r<? hehe ?>\'.\r\tself assertEnumeration: #stringOrTag anyParses: \'<? hehe ?>\'.\r\tself assertEnumeration: #stringOrTag anyParses: \'<single line tag/>\'.\r\t\r',			#stamp : 'Icewater 12/31/2016 11:48:14',			#package : #RecognisingStructuralPatterns		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BruteForceTagOfTagsGeneratorTest,				#isMetaSide : false			},			#name : #testMultiStart,			#protocol : #tests,			#sourceCode : 'testMultiStart\r\t\r\tself assertEnumeration: #stringOrTag anyParses:\'<a>b</a>\r<single line tag/>\r<? hehe ?>\'.\r\tself assertEnumeration: #stringOrTag anyParses: \'<? hehe ?>\'.\r\tself assertEnumeration: #stringOrTag anyParses: \'<single line tag/>\'.\r\tself assertEnumeration: #stringOrTag anyParses:\'<?doctype stuff?>\r<! other stuff>\r<a>\r\t<b>c </b>\r</a>\'.\r\t\r',			#stamp : 'MathiasFuchs 1/2/2017 13:07',			#package : #RecognisingStructuralPatterns		}	}}OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:09:06.955+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '12' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BruteForceTagOfTagsGenerator,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t^ (BruteForceStringGenerator new)\r\t\tbegin:#(\'<?\' $<);\r\t\tend:#(\'?>\' \'/>\');\r\t\tyourself',			#stamp : 'Icewater 12/31/2016 11:48:14',			#package : #RecognisingStructuralPatterns		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BruteForceTagOfTagsGenerator,				#isMetaSide : false			},			#name : #string,			#protocol : #accessing,			#sourceCode : 'string\r\t^ (BruteForceStringGenerator new)\r\t\tbegin:#(\'<?\' $< \'<!\');\r\t\tend:#(\'?>\' \'/>\' \'>\');\r\t\tyourself',			#stamp : 'MathiasFuchs 1/2/2017 13:09',			#package : #RecognisingStructuralPatterns		}	}}OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:14:28.685+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '13' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BruteForceTagOfTagsGenerator class',				#isMetaSide : true			},			#name : #'getParsers:',			#protocol : #defaults,			#sourceCode : 'getParsers: input\r\t| argsCreator generator|\r\targsCreator := (EnumArgumentsCreator new)\r\tinput: input;\r\tyourself.\r\t\t\r\tgenerator:= (self new).\r\t\t\r\t\targsCreator begins isEmpty\r\t\t\tifFalse:[ generator begins:argsCreator begins. ].\r\t\targsCreator ends isEmpty\r\t\t\tifFalse:[generator ends: argsCreator ends].\r\t\targsCreator delimiters isEmpty\r\t\t\tifFalse:[generator delimiters: argsCreator delimiters].\r\t\t\r\t\r\t^ generator generate.\r\t',			#stamp : 'Icewater 12/31/2016 11:48:14',			#package : #RecognisingStructuralPatterns		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BruteForceTagOfTagsGenerator class',				#isMetaSide : true			},			#name : #'getParsers:',			#protocol : #defaults,			#sourceCode : 'getParsers: input\r\t| argsCreator generator|\r\targsCreator := (EnumArgumentsCreator new)\r\tinput: input;\r\tyourself.\r\tself halt.\r\tgenerator:= (self new).\r\t\t\r\t\targsCreator begins isEmpty\r\t\t\tifFalse:[ generator begins:argsCreator begins. ].\r\t\targsCreator ends isEmpty\r\t\t\tifFalse:[generator ends: argsCreator ends].\r\t\targsCreator delimiters isEmpty\r\t\t\tifFalse:[generator delimiters: argsCreator delimiters].\r\t\t\r\t\r\t^ generator generate.\r\t',			#stamp : 'MathiasFuchs 1/2/2017 13:14',			#package : #RecognisingStructuralPatterns		}	}}OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:15:01.299+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '14' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BruteForceTagOfTagsGenerator class',				#isMetaSide : true			},			#name : #'getParsers:',			#protocol : #defaults,			#sourceCode : 'getParsers: input\r\t| argsCreator generator|\r\targsCreator := (EnumArgumentsCreator new)\r\tinput: input;\r\tyourself.\r\tself halt.\r\tgenerator:= (self new).\r\t\t\r\t\targsCreator begins isEmpty\r\t\t\tifFalse:[ generator begins:argsCreator begins. ].\r\t\targsCreator ends isEmpty\r\t\t\tifFalse:[generator ends: argsCreator ends].\r\t\targsCreator delimiters isEmpty\r\t\t\tifFalse:[generator delimiters: argsCreator delimiters].\r\t\t\r\t\r\t^ generator generate.\r\t',			#stamp : 'MathiasFuchs 1/2/2017 13:14',			#package : #RecognisingStructuralPatterns		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'BruteForceTagOfTagsGenerator class',				#isMetaSide : true			},			#name : #'getParsers:',			#protocol : #defaults,			#sourceCode : 'getParsers: input\r\t| argsCreator generator|\r\targsCreator := (EnumArgumentsCreator new)\r\tinput: input;\r\tyourself.\r\t\r\tgenerator:= (self new).\r\t\t\r\t\targsCreator begins isEmpty\r\t\t\tifFalse:[ generator begins:argsCreator begins. ].\r\t\targsCreator ends isEmpty\r\t\t\tifFalse:[generator ends: argsCreator ends].\r\t\targsCreator delimiters isEmpty\r\t\t\tifFalse:[generator delimiters: argsCreator delimiters].\r\t\t\r\t\r\t^ generator generate.\r\t',			#stamp : 'MathiasFuchs 1/2/2017 13:15',			#package : #RecognisingStructuralPatterns		}	}}OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:19:11.184+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '15' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '16' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'RecognisingStructuralPatterns-MathiasFuchs.148',		#repositoryDescription : 'C:\\Users\\Icewater\\Desktop\\pharo\\pharo-local\\package-cache'	}}OmEntry {	#tags : {		#author : 'MathiasFuchs',		#time : DateAndTime [ '2017-01-02T13:19:14.341+01:00' ],		#prior : OmReference [ 'workingImgSilv_e5gwdw1', '16' ],		#self : OmReference [ 'workingImgSilv_e5gwdw1', '17' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'RecognisingStructuralPatterns-MathiasFuchs.148',		#repositoryDescription : 'RecognisingStructuralPatterns/repository [master] (GitFileTree)'	}}