THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
2 January 2017 1:02:29.485 pm

VM: Win32 - IX86 - 6.2 - CoInterpreter VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
StackToRegisterMappingCogit VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
https://github.com/pharo-project/pharo-vm.git Commit: b8ec25a570d7539653e1d793e97609adb509aaed Date: 2016-05-04 11:14:22 +0200 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #589

Image: Pharo6.0 [Latest update: #60297]

Array(Object)>>errorSubscriptBounds:
	Receiver: #()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
#()

Array(Object)>>at:
	Receiver: #()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
#()

Array(SequenceableCollection)>>first
	Receiver: #()
	Arguments and temporary variables: 

	Receiver's instance variables: 
#()

[ :e | 
e size > 1
	ifTrue: [ Element new
			children: e;
			name: '__ROOT__';
			weight: 0;
			yourself ]
	ifFalse: [ e first ] ] in XMLFactoryParser>>start
	Receiver: a XMLFactoryParser(375961600)
	Arguments and temporary variables: 
		e: 	#()
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPActionParser(892945664)
		dependencies: 	an IdentityDictionary()
		content: 	a PPDelegateParser(content)
		comment: 	a PPDelegateParser(comment)
		openFileTag: 	a PPDelegateParser(openFileTag)
		xmlElement: 	a PPDelegateParser(xmlElement)
		emptyElementTag: 	a PPDelegateParser(emptyElementTag)
		docTypeTag: 	a PPDelegateParser(docTypeTag)


PPActionParser>>parseOn:
	Receiver: a PPActionParser(892945664)
	Arguments and temporary variables: 
		aPPContext: 	a PPContext: 路{

    "id": 1,

    "name": "A green door",

    "pr...etc...
		element: 	#()
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPPossessiveRepeatingParser(49376256) [0, *]
		block: 	[ :e | 
e size > 1
	ifTrue: [ Element new
			children: e;
			name: '__RO...etc...


XMLFactoryParser(PPDelegateParser)>>parseOn:
	Receiver: a XMLFactoryParser(375961600)
	Arguments and temporary variables: 
		aPPContext: 	a PPContext: 路{

    "id": 1,

    "name": "A green door",

    "pr...etc...
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPActionParser(892945664)
		dependencies: 	an IdentityDictionary()
		content: 	a PPDelegateParser(content)
		comment: 	a PPDelegateParser(comment)
		openFileTag: 	a PPDelegateParser(openFileTag)
		xmlElement: 	a PPDelegateParser(xmlElement)
		emptyElementTag: 	a PPDelegateParser(emptyElementTag)
		docTypeTag: 	a PPDelegateParser(docTypeTag)


XMLFactoryParser(PPParser)>>parseWithContext:
	Receiver: a XMLFactoryParser(375961600)
	Arguments and temporary variables: 
		context: 	a PPContext: 路{

    "id": 1,

    "name": "A green door",

    "price...etc...
		result: 	nil
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPActionParser(892945664)
		dependencies: 	an IdentityDictionary()
		content: 	a PPDelegateParser(content)
		comment: 	a PPDelegateParser(comment)
		openFileTag: 	a PPDelegateParser(openFileTag)
		xmlElement: 	a PPDelegateParser(xmlElement)
		emptyElementTag: 	a PPDelegateParser(emptyElementTag)
		docTypeTag: 	a PPDelegateParser(docTypeTag)


XMLFactoryParser(PPParser)>>parse:withContext:
	Receiver: a XMLFactoryParser(375961600)
	Arguments and temporary variables: 
		anObject: 	'{

    "id": 1,

    "name": "A green door",

    "price": 12.50,

 ...etc...
		aPPContext: 	a PPContext: 路{

    "id": 1,

    "name": "A green door",

    "pr...etc...
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPActionParser(892945664)
		dependencies: 	an IdentityDictionary()
		content: 	a PPDelegateParser(content)
		comment: 	a PPDelegateParser(comment)
		openFileTag: 	a PPDelegateParser(openFileTag)
		xmlElement: 	a PPDelegateParser(xmlElement)
		emptyElementTag: 	a PPDelegateParser(emptyElementTag)
		docTypeTag: 	a PPDelegateParser(docTypeTag)


XMLFactoryParser(PPParser)>>parse:
	Receiver: a XMLFactoryParser(375961600)
	Arguments and temporary variables: 
		anObject: 	'{

    "id": 1,

    "name": "A green door",

    "price": 12.50,

 ...etc...
	Receiver's instance variables: 
		properties: 	nil
		parser: 	a PPActionParser(892945664)
		dependencies: 	an IdentityDictionary()
		content: 	a PPDelegateParser(content)
		comment: 	a PPDelegateParser(comment)
		openFileTag: 	a PPDelegateParser(openFileTag)
		xmlElement: 	a PPDelegateParser(xmlElement)
		emptyElementTag: 	a PPDelegateParser(emptyElementTag)
		docTypeTag: 	a PPDelegateParser(docTypeTag)


[ :string | correctlyParsedInputs add: (correctParser parse: string) ] in SetValidator>>validate:correctParser:
	Receiver: a SetValidator
	Arguments and temporary variables: 
		aCollection: 	an OrderedCollection('{

    "id": 1,

    "name": "A green door",...etc...
		correctParser: 	a XMLFactoryParser(375961600)
		parsedInputs: 	an OrderedCollection(an OrderedCollection(an Element an Element a...etc...
		correctlyParsedInputs: 	an OrderedCollection()
		finalResults: 	an OrderedCollection()
		string: 	'{

    "id": 1,

    "name": "A green door",

    "price": 12.50,

   ...etc...
	Receiver's instance variables: 
		results: 	nil
		correctResult: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection('{

    "id": 1,

    "name": "A green door",

    "price": 12.50,

 ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :string | correctlyParsedInputs add: (correctParser parse: string) ]
		index: 	1
	Receiver's instance variables: 
		array: 	#('{

    "id": 1,

    "name": "A green door",

    "price": 12.50,

  ...etc...
		firstIndex: 	1
		lastIndex: 	2


SetValidator>>validate:correctParser:
	Receiver: a SetValidator
	Arguments and temporary variables: 
		aCollection: 	an OrderedCollection('{

    "id": 1,

    "name": "A green door",...etc...
		correctParser: 	a XMLFactoryParser(375961600)
		parsedInputs: 	an OrderedCollection(an OrderedCollection(an Element an Element a...etc...
		correctlyParsedInputs: 	an OrderedCollection()
		finalResults: 	an OrderedCollection()
	Receiver's instance variables: 
		results: 	nil
		correctResult: 	nil


[ solz := SetValidator new
	validate: shorterFiles
	correctParser: XMLFactoryParser new ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Time class>>microsecondsToRun:
	Receiver: Time
	Arguments and temporary variables: 
		timedBlock: 	[ solz := SetValidator new
	validate: shorterFiles
	correctParser: ...etc...
		initialMicroseconds: 	3660811322839000
	Receiver's instance variables: 
		superclass: 	Magnitude
		methodDict: 	a MethodDictionary(#<->Time>>#< #=->Time>>#= #addSeconds:->Time>>#a...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Time
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection(ChronologyConstants)
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Chronology'
		traitComposition: 	{}
		localSelectors: 	nil


Time class>>millisecondsToRun:
	Receiver: Time
	Arguments and temporary variables: 
		timedBlock: 	[ solz := SetValidator new
	validate: shorterFiles
	correctParser: ...etc...
	Receiver's instance variables: 
		superclass: 	Magnitude
		methodDict: 	a MethodDictionary(#<->Time>>#< #=->Time>>#= #addSeconds:->Time>>#a...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Time
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection(ChronologyConstants)
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Chronology'
		traitComposition: 	{}
		localSelectors: 	nil


BlockClosure>>timeToRun
	Receiver: [ solz := SetValidator new
	validate: shorterFiles
	correctParser: XMLFactoryParser new ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	49
		numArgs: 	0


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'solz:= OrderedCollection new.
[ 
solz:= SetValidator new valid...etc...
		itsSelection: 	a Text for 'solz:= OrderedCollection new.
[ 
solz:= SetValidator ...etc...
		itsSelectionString: 	'solz:= OrderedCollection new.
[ 
solz:= SetValidator new v...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	solz := OrderedCollection new.
	^ [ solz := SetValidator new
		valid...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(970362880)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (567@468)
		owner: 	a TransformWithLayoutMorph(901328128)
		submorphs: 	an Array(a RubCursor(414585856) a RubPrimarySelectionMorph(954193920...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (941273344) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(330684416)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(414585856)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(543875072))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(366913024))(a SearchMorp...etc...
		lastStepTime: 	2394586
		lastStepMessage: 	nil
		lastCycleTime: 	2394607
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	2394586
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(366913024))(a SearchMorp...etc...
		lastStepTime: 	2394586
		lastStepMessage: 	nil
		lastCycleTime: 	2394607
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	2394586
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(366913024))(a SearchMorp...etc...
		lastStepTime: 	2394586
		lastStepMessage: 	nil
		lastCycleTime: 	2394607
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	2394586
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Array(Object)>>errorSubscriptBounds:
Array(Object)>>at:
Array(SequenceableCollection)>>first
[ :e | 
e size > 1
	ifTrue: [ Element new
			children: e;
			name: '__ROOT__';
			weight: 0;
			yourself ]
	ifFalse: [ e first ] ] in XMLFactoryParser>>start
PPActionParser>>parseOn:
XMLFactoryParser(PPDelegateParser)>>parseOn:
XMLFactoryParser(PPParser)>>parseWithContext:
XMLFactoryParser(PPParser)>>parse:withContext:
XMLFactoryParser(PPParser)>>parse:
[ :string | correctlyParsedInputs add: (correctParser parse: string) ] in SetValidator>>validate:correctParser:
OrderedCollection>>do:
SetValidator>>validate:correctParser:
[ solz := SetValidator new
	validate: shorterFiles
	correctParser: XMLFactoryParser new ] in UndefinedObject>>DoIt
Time class>>microsecondsToRun:
Time class>>millisecondsToRun:
BlockClosure>>timeToRun
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Halt
2 January 2017 1:13:05.847 pm

VM: Win32 - IX86 - 6.2 - CoInterpreter VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
StackToRegisterMappingCogit VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
https://github.com/pharo-project/pharo-vm.git Commit: b8ec25a570d7539653e1d793e97609adb509aaed Date: 2016-05-04 11:14:22 +0200 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #589

Image: Pharo6.0 [Latest update: #60297]

[ :parser | 
self halt.
solz add: (parser parse: string2) ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		parser: 	a PPPossessiveRepeatingParser(710352128) [0, *]
	Receiver's instance variables: 
nil

OrderedCollection>>do:
	Receiver: an OrderedCollection(a PPPossessiveRepeatingParser(710352128) [0, *] a PPPossessiveRepeati...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :parser | 
self halt.
solz add: (parser parse: string2) ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a PPPossessiveRepeatingParser(710352128) [0, *] a PPPossessiveR...etc...
		firstIndex: 	1
		lastIndex: 	4


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'parz do: [ :parser |
	self halt.
	solz add: (parser parse:stri...etc...
		itsSelection: 	a Text for 'parz do: [ :parser |
	self halt.
	solz add: (parser p...etc...
		itsSelectionString: 	'parz do: [ :parser |
	self halt.
	solz add: (parser parse:...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ parz
		do: [ :parser | 
			self halt.
			solz add: (parser parse: ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(970362880)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@259)
		owner: 	a TransformWithLayoutMorph(901328128)
		submorphs: 	an Array(a RubPrimarySelectionMorph(482390016) a RubCursor(414585856...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (941273344) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(330684416)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(414585856)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(773694464))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(694901248))(a DropList...etc...
		lastStepTime: 	3057600
		lastStepMessage: 	nil
		lastCycleTime: 	3057622
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3057600
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(694901248))(a DropList...etc...
		lastStepTime: 	3057600
		lastStepMessage: 	nil
		lastCycleTime: 	3057622
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3057600
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(694901248))(a DropList...etc...
		lastStepTime: 	3057600
		lastStepMessage: 	nil
		lastCycleTime: 	3057622
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3057600
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ :parser | 
self halt.
solz add: (parser parse: string2) ] in UndefinedObject>>DoIt
OrderedCollection>>do:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Halt
2 January 2017 1:13:20.165 pm

VM: Win32 - IX86 - 6.2 - CoInterpreter VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
StackToRegisterMappingCogit VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
https://github.com/pharo-project/pharo-vm.git Commit: b8ec25a570d7539653e1d793e97609adb509aaed Date: 2016-05-04 11:14:22 +0200 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #589

Image: Pharo6.0 [Latest update: #60297]

[ :parser | 
self halt.
solz add: (parser parse: string2) ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		parser: 	a PPPossessiveRepeatingParser(549250048) [0, *]
	Receiver's instance variables: 
nil

OrderedCollection>>do:
	Receiver: an OrderedCollection(a PPPossessiveRepeatingParser(549250048) [0, *] a PPPossessiveRepeati...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :parser | 
self halt.
solz add: (parser parse: string2) ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a PPPossessiveRepeatingParser(549250048) [0, *] a PPPossessiveR...etc...
		firstIndex: 	1
		lastIndex: 	4


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'string2:=''<?doctype stuff?>
<! other stuff>
<a>
	<b>c </b>
</...etc...
		itsSelection: 	a Text for 'string2:=''<?doctype stuff?>
<! other stuff>
<a>
	<b>...etc...
		itsSelectionString: 	'string2:=''<?doctype stuff?>
<! other stuff>
<a>
	<b>c </b...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	string2 := '<?doctype stuff?>
<! other stuff>
<a>
	<b>c </b>
</a>'.
...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(970362880)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@259)
		owner: 	a TransformWithLayoutMorph(901328128)
		submorphs: 	an Array(a RubPrimarySelectionMorph(482390016) a RubCursor(414585856...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (941273344) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(330684416)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(414585856)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(290322688))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(970362880))(a Rub...etc...
		lastStepTime: 	3071889
		lastStepMessage: 	nil
		lastCycleTime: 	3071910
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3071889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(970362880))(a Rub...etc...
		lastStepTime: 	3071889
		lastStepMessage: 	nil
		lastCycleTime: 	3071910
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3071889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(970362880))(a Rub...etc...
		lastStepTime: 	3071889
		lastStepMessage: 	nil
		lastCycleTime: 	3071910
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3071889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ :parser | 
self halt.
solz add: (parser parse: string2) ] in UndefinedObject>>DoIt
OrderedCollection>>do:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Halt
2 January 2017 1:14:31.079 pm

VM: Win32 - IX86 - 6.2 - CoInterpreter VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
StackToRegisterMappingCogit VMMaker.oscog-eem.1855 uuid: d8e4a3c2-a3bf-4adc-b224-8012903a1ef4 May  4 2016
https://github.com/pharo-project/pharo-vm.git Commit: b8ec25a570d7539653e1d793e97609adb509aaed Date: 2016-05-04 11:14:22 +0200 By: Esteban Lorenzano <estebanlm@gmail.com> Jenkins build #589

Image: Pharo6.0 [Latest update: #60297]

BruteForceTagOfTagsGenerator class>>getParsers:
	Receiver: BruteForceTagOfTagsGenerator
	Arguments and temporary variables: 
		input: 	'<?doctype stuff?>
<! other stuff>
<a>
	<b>c </b>
</a>'
		argsCreator: 	an EnumArgumentsCreator
		generator: 	nil
	Receiver's instance variables: 
		superclass: 	CompositeGenerator
		methodDict: 	a MethodDictionary(#begins->BruteForceTagOfTagsGenerator>>#begins #...etc...
		format: 	65544
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#BruteForceTagOfTagsGenerator
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'RecognisingStructuralPatterns-BruteForceGenerators'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ parz := BruteForceTagOfTagsGenerator getParsers: string2
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(970362880)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(970362880)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@259)
		owner: 	a TransformWithLayoutMorph(901328128)
		submorphs: 	an Array(a RubPrimarySelectionMorph(482390016) a RubCursor(414585856...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (941273344) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(330684416)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(414585856)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(2820352))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(128525568)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(662090752))(a SearchMorp...etc...
		lastStepTime: 	3142832
		lastStepMessage: 	nil
		lastCycleTime: 	3142854
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3142832
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(662090752))(a SearchMorp...etc...
		lastStepTime: 	3142832
		lastStepMessage: 	nil
		lastCycleTime: 	3142854
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3142832
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(1068105728))
		viewBox: 	(0@0) corner: (2544@1361)
		canvas: 	a FormCanvas on: DisplayScreen(2544x1361x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(662090752))(a SearchMorp...etc...
		lastStepTime: 	3142832
		lastStepMessage: 	nil
		lastCycleTime: 	3142854
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(414585856)))
		lastAlarmTime: 	3142832
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(1068105728)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2544@1361)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(788399360) a Na...etc...
		fullBounds: 	(0@0) corner: (2544@1361)
		color: 	Color white
		extension: 	a MorphExtension (1052640256) [other:  (dragEnabled -> true) (dropEn...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BruteForceTagOfTagsGenerator class>>getParsers:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

